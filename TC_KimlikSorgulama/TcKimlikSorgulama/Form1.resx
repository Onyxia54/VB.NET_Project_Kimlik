<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Guna2Elipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AJEAAAAqAAAAigAAADMAAAB9AAAAQwAAAGsAAABaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAGAAAAKgAAADYAAAAzAAAAMwAAAD0AAABAAAAAQAAAAEAAAAA/AAAANgAA
        ADQAAAA3AAAAPgAAADgAAAA9AAAAOQAAAD0AAAA6AAAAPAAAADsAAAA2AAAANgAAACcAAAAFAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG0AAADQAAAAxQAAAMUAAADFAAAAxQAAAMUAAADFAAAAxQAA
        AMUAAADFAAAAxQAAAMUAAADFAAAAxQAAAMUAAADFAAAAxQAAAMUAAADFAAAAxQAAAMUAAADFAAAAzgAA
        AG4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAtAAAAIgAAAA0AAAANgAAADcAAAA3AAAANwAA
        ADcAAAA3AAAANwAAADcAAAA2AAAANwAAADcAAAA3AAAANgAAADcAAAA3AAAANgAAADcAAAA3AAAANgAA
        ADQAAACTAAAAvwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABjAAAAzQAAAM4AAADaAAAAywAA
        AMgAAADIAAAAyAAAAMgAAADIAAAAyQAAANYAAADUAAAAyAAAANIAAADXAAAAyQAAAM8AAADaAAAAygAA
        AMwAAADaAAAAzQAAAMoAAABkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAdAAAAWAAA
        ANEAAAA+AAAANAAAADoAAAA6AAAAOgAAADkAAAAsAAAAqgAAAJIAAAAjAAAAhQAAALUAAAAoAAAAYgAA
        AMwAAAA2AAAARAAAANMAAABOAAAAHAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAA2AAAAxgAAACsAAACmAAAAwwAAAMcAAADCAAAAwQAAAD0AAACWAAAAfAAAAAAAAABtAAAApgAA
        AAAAAABDAAAAwgAAAA4AAAAfAAAAygAAACoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAADYAAADFAAAANwAAAM4AAAByAAAA0QAAAHsAAADEAAAAXAAAAJUAAAB8AAAAAAAA
        AG0AAACmAAAAAAAAAEMAAADCAAAADgAAAB8AAADKAAAAKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAANgAAAMUAAAA2AAAA1wAAAMEAAADrAAAAxAAAAOQAAABbAAAAlQAA
        AHwAAAAAAAAAbQAAAKYAAAAAAAAAQwAAAMIAAAAOAAAAHwAAAMoAAAAqAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2AAAAxQAAADcAAADQAAAAgwAAANcAAACLAAAAywAA
        AFwAAACVAAAAfAAAAAAAAABoAAAA4AAAAKUAAAC/AAAAxgAAAAwAAAAfAAAAygAAACoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADYAAADFAAAANgAAANQAAACuAAAA5QAA
        ALMAAADcAAAAWgAAAJUAAAB8AAAAAAAAACEAAABoAAAAbQAAAG4AAABKAAAAAQAAACAAAADKAAAAKgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANgAAAMcAAAAgAAAAXAAA
        AHgAAAB1AAAAdwAAAHEAAAAeAAAAlwAAAHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAA
        AMoAAAAqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0AAAA2gAA
        AIUAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHoAAADLAAAAugAAAHkAAAB8AAAAfAAAAHwAAAB8AAAAfAAA
        AHsAAACLAAAA2AAAACkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABkAAADPAAAA6AAAAJ0AAACZAAAAmQAAAJkAAACZAAAAmAAAAK0AAADzAAAAtAAAAJcAAACZAAAAmQAA
        AJkAAACZAAAAmwAAAOQAAADAAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAJkAAAD0AAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAJ8AAACiAAAACwAA
        AAAAAAAAAAAAAAAAAAAAAABLAAAA0AAAAD0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAlgAAAOIAAADLAAAAJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAA
        AMQAAAB1AAAAAQAAAAAAAAAAAAAAJgAAAMkAAABrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACYAAAAiQAAAKMAAACoAAAADAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAQwAAANMAAABGAAAAAAAAAA0AAACpAAAAmgAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQAAADSAAAAvwAAAPgAAABzAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAbwAAAMQAAAAjAAAAeQAAAMEAAAAcAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMgAAAGwAAABqAAAAfgAA
        ANIAAABUAAAAKAAAACoAAAAqAAAAKgAAACkAAAAzAAAAuwAAAMoAAADPAAAAPQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAgAAAAO8AAADmAAAA5gAAAOYAAADmAAAA5gAAAOUAAADwAAAA/AAAAHMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAA4AP/wAAAf8wA8B/MP/wHzP//A8z/gePM/gBjzPgAA8D4BAPAGAAPwAP
        gD/8AAAP/4AAD/4AAAD+AAAA/AAAAP4AAAD+AAAA/4AJA/+ACQP/gAkD/4AIA/+ACAP/gA/j/4AAA/+A
        AAP/x8PH/8Phj//B8Q//wfgf/8AAP//4AH8=
</value>
  </data>
</root>